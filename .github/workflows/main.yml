name: Maven CI with SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      SONARQUBE_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}
      SONARQUBE_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

    steps:
      # 1. Checkout
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Build
      - name: Build with Maven
        run: mvn -B -DskipTests clean package

      # 5. SonarQube Analysis
      - name: SonarQube Scan
        run: mvn -B sonar:sonar -Dsonar.host.url=${{ env.SONARQUBE_HOST_URL }} -Dsonar.login=${{ env.SONARQUBE_TOKEN }}

      # ⚠️ GitHub Actions doesn’t have waitForQualityGate like Jenkins.
      # To enforce Quality Gate, use SonarQube GitHub checks or webhook integration.
